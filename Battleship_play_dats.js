/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2016-12-10: 14h:35m
**
*/

function
Battleship__patsfun_15__closurerize(env0, env1)
{
  return [function(cenv, arg0, arg1) { return Battleship__patsfun_15(cenv[1], cenv[2], arg0, arg1); }, env0, env1];
}


function
Battleship__patsfun_16__closurerize(env0, env1)
{
  return [function(cenv, arg0, arg1) { return Battleship__patsfun_16(cenv[1], cenv[2], arg0, arg1); }, env0, env1];
}


function
Battleship__patsfun_18__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_18(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_19__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0) { return Battleship__patsfun_19(cenv[1], cenv[2], cenv[3], arg0); }, env0, env1, env2];
}


function
Battleship__patsfun_20__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return Battleship__patsfun_20(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
Battleship__patsfun_21__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_21(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_22__closurerize()
{
  return [function(cenv, arg0) { return Battleship__patsfun_22(arg0); }];
}


function
Battleship__patsfun_23__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_23(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_24__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0) { return Battleship__patsfun_24(cenv[1], cenv[2], cenv[3], arg0); }, env0, env1, env2];
}


function
Battleship__patsfun_25__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return Battleship__patsfun_25(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
Battleship__patsfun_26__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_26(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_27__closurerize()
{
  return [function(cenv, arg0) { return Battleship__patsfun_27(arg0); }];
}


function
ownBoard_init()
{
//
// knd = 0
  var tmpret0
  var tmp1
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_init
  tmp1 = null;
  tmpret0 = ats2jspre_mtrxszref_make_elt(8, 8, tmp1);
  return tmpret0;
} // end-of-function


function
attackBoard_init()
{
//
// knd = 0
  var tmpret2
  var tmp3
  var tmplab, tmplab_js
//
  // __patsflab_attackBoard_init
  tmp3 = null;
  tmpret2 = ats2jspre_mtrxszref_make_elt(8, 8, tmp3);
  return tmpret2;
} // end-of-function


function
player_human_init()
{
//
// knd = 0
  var tmpret4
  var tmp5
  var tmp6
  var tmplab, tmplab_js
//
  // __patsflab_player_human_init
  tmp5 = ownBoard_init();
  tmp6 = attackBoard_init();
  tmpret4 = [tmp5, tmp6, false];
  return tmpret4;
} // end-of-function


function
player_cpu_init()
{
//
// knd = 0
  var tmpret7
  var tmp8
  var tmp9
  var tmplab, tmplab_js
//
  // __patsflab_player_cpu_init
  tmp8 = ownBoard_init();
  tmp9 = attackBoard_init();
  tmpret7 = [tmp8, tmp9, true];
  return tmpret7;
} // end-of-function


function
ownBoard_get(arg0)
{
//
// knd = 0
  var tmpret10
  var tmp11
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_get
  tmp11 = arg0[0];
  tmpret10 = tmp11;
  return tmpret10;
} // end-of-function


function
attackBoard_get(arg0)
{
//
// knd = 0
  var tmpret12
  var tmp13
  var tmplab, tmplab_js
//
  // __patsflab_attackBoard_get
  tmp13 = arg0[1];
  tmpret12 = tmp13;
  return tmpret12;
} // end-of-function


function
ownBoard_addShips(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
{
//
// knd = 0
  var tmp15
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_addShips
  tmp15 = ownBoard_get(arg0);
  Battleship__addShip_7(tmp15, arg1);
  Battleship__addShip_7(tmp15, arg2);
  Battleship__addShip_7(tmp15, arg3);
  Battleship__addShip_7(tmp15, arg4);
  Battleship__addShip_7(tmp15, arg5);
  Battleship__addShip_7(tmp15, arg6);
  Battleship__addShip_7(tmp15, arg7);
  Battleship__addShip_7(tmp15, arg8);
  Battleship__addShip_7(tmp15, arg9);
  Battleship__addShip_7(tmp15, arg10);
  return/*_void*/;
} // end-of-function


function
Battleship__addShip_7(env0, arg0)
{
//
// knd = 0
  var tmp17
  var tmp18
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__addShip_7
  tmp17 = arg0[0];
  tmp18 = arg0[1];
  Battleship__aux_8(env0, tmp17, tmp18);
  return/*_void*/;
} // end-of-function


function
Battleship__aux_8(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp20
  var tmp21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var tmp26
  var tmp27
  var tmp28
  var tmp29
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_Battleship__aux_8
    tmp20 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab0
        if(ATSCKptriscons(tmp20)) { tmplab_js = 4; break; }
        case 2: // __atstmplab1
        tmp21 = [1];
        ats2jspre_mtrxszref_set_at(env0, arg0, arg1, tmp21);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab2
        case 4: // __atstmplab3
        tmp25 = ats2jspre_JSmath_random();
        tmp24 = ats2jspre_mul_double_double(tmp25, 0.999999);
        tmp23 = ats2jspre_mul_double_int(tmp24, 8);
        tmp22 = ats2jspre_double2int(tmp23);
        tmp29 = ats2jspre_JSmath_random();
        tmp28 = ats2jspre_mul_double_double(tmp29, 0.999999);
        tmp27 = ats2jspre_mul_double_int(tmp28, 8);
        tmp26 = ats2jspre_double2int(tmp27);
        // ATStailcalseq_beg
        apy0 = tmp22;
        apy1 = tmp26;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_Battleship__aux_8
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
generate_randShip()
{
//
// knd = 0
  var tmpret39
  var tmp40
  var tmp41
  var tmp42
  var tmp43
  var tmp44
  var tmp45
  var tmp46
  var tmp47
  var tmplab, tmplab_js
//
  // __patsflab_generate_randShip
  tmp43 = ats2jspre_JSmath_random();
  tmp42 = ats2jspre_mul_double_double(tmp43, 0.999999);
  tmp41 = ats2jspre_mul_double_int(tmp42, 8);
  tmp40 = ats2jspre_double2int(tmp41);
  tmp47 = ats2jspre_JSmath_random();
  tmp46 = ats2jspre_mul_double_double(tmp47, 0.999999);
  tmp45 = ats2jspre_mul_double_int(tmp46, 8);
  tmp44 = ats2jspre_double2int(tmp45);
  tmpret39 = [tmp40, tmp44];
  return tmpret39;
} // end-of-function


function
attack(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmpret48
  var tmp49
  var tmp50
  var tmp51
  var tmp52
  var tmp53
  var tmp54
  var tmp55
  var tmp56
  var tmp57
  var tmp58
  var tmplab, tmplab_js
//
  // __patsflab_attack
  tmp49 = arg0[1];
  tmp50 = arg1[0];
  tmp51 = checkBefore(arg0, arg2, arg3);
  tmp52 = tmp51[0];
  tmp55 = ats2jspre_neg_int1(1);
  tmp54 = ats2jspre_neq_int0_int0(tmp52, tmp55);
  if(tmp54) {
    tmp56 = ats2jspre_neg_int1(2);
    tmp53 = ats2jspre_neq_int0_int0(tmp52, tmp56);
  } else {
    tmp53 = false;
  } // endif
  if(tmp53) {
    tmpret48 = bomb_node(tmp50, tmp49, arg2, arg3);
  } else {
    tmp58 = ats2jspre_neg_int1(1);
    tmp57 = ats2jspre_eq_int0_int0(tmp52, tmp58);
    if(tmp57) {
      ats2jspre_alert("You already tried that pair!");
      tmpret48 = 2;
    } else {
      ats2jspre_alert("Your choice has to be inside the grid!");
      tmpret48 = 2;
    } // endif
  } // endif
  return tmpret48;
} // end-of-function


function
bomb_node(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmpret61
  var tmp62
  var tmp63
  var tmp64
  var tmp65
  var tmp66
  var tmp67
  var tmp69
  var tmp71
  var tmp72
  var tmp74
  var tmp76
  var tmplab, tmplab_js
//
  // __patsflab_bomb_node
  tmp64 = ats2jspre_lt_int1_int1(arg2, 8);
  if(tmp64) {
    tmp63 = ats2jspre_gte_int1_int1(arg2, 0);
  } else {
    tmp63 = false;
  } // endif
  if(tmp63) {
    tmp65 = ats2jspre_lt_int1_int1(arg3, 8);
    if(tmp65) {
      tmp62 = ats2jspre_gte_int1_int1(arg3, 0);
    } else {
      tmp62 = false;
    } // endif
  } else {
    tmp62 = false;
  } // endif
  if(tmp62) {
    tmp66 = ats2jspre_mtrxszref_get_at(arg0, arg2, arg3);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab4
        if(ATSCKptriscons(tmp66)) { tmplab_js = 4; break; }
        case 2: // __atstmplab5
        tmp69 = [1];
        ats2jspre_mtrxszref_set_at(arg1, arg2, arg3, tmp69);
        tmp71 = [3];
        ats2jspre_mtrxszref_set_at(arg0, arg2, arg3, tmp71);
        tmpret61 = 0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab6
        case 4: // __atstmplab7
        tmp67 = tmp66[0];
        tmp72 = ats2jspre_eq_int0_int0(tmp67, 1);
        if(tmp72) {
          tmp74 = [2];
          ats2jspre_mtrxszref_set_at(arg0, arg2, arg3, tmp74);
          tmp76 = [2];
          ats2jspre_mtrxszref_set_at(arg1, arg2, arg3, tmp76);
          tmpret61 = 1;
        } else {
          tmpret61 = 0;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    ats2jspre_alert("Your inputs need to be inside the grid!");
    tmpret61 = 2;
  } // endif
  return tmpret61;
} // end-of-function


function
defNode2string(arg0)
{
//
// knd = 0
  var tmpret78
  var tmp79
  var tmplab, tmplab_js
//
  // __patsflab_defNode2string
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab8
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab9
      tmpret78 = "O";
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab10
      case 4: // __atstmplab11
      tmp79 = arg0[0];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab12
          if(!ATSCKpat_int(tmp79, 1)) { tmplab_js = 3; break; }
          case 2: // __atstmplab13
          tmpret78 = "S";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab14
          if(!ATSCKpat_int(tmp79, 2)) { tmplab_js = 5; break; }
          case 4: // __atstmplab15
          tmpret78 = "D";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 5: // __atstmplab16
          if(!ATSCKpat_int(tmp79, 3)) { tmplab_js = 7; break; }
          case 6: // __atstmplab17
          tmpret78 = "-";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 7: // __atstmplab18
          tmpret78 = ats2jspre_String(tmp79);
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret78;
} // end-of-function


function
attNode2string(arg0)
{
//
// knd = 0
  var tmpret80
  var tmp81
  var tmplab, tmplab_js
//
  // __patsflab_attNode2string
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab19
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab20
      tmpret80 = "?";
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab21
      case 4: // __atstmplab22
      tmp81 = arg0[0];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab23
          if(!ATSCKpat_int(tmp81, 1)) { tmplab_js = 3; break; }
          case 2: // __atstmplab24
          tmpret80 = "X";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab25
          if(!ATSCKpat_int(tmp81, 2)) { tmplab_js = 5; break; }
          case 4: // __atstmplab26
          tmpret80 = "D";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 5: // __atstmplab27
          tmpret80 = ats2jspre_String(tmp81);
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret80;
} // end-of-function


function
boards2show(arg0)
{
//
// knd = 0
  var tmpret82
  var tmp83
  var tmp84
  var tmp85
  var tmp86
  var tmplab, tmplab_js
//
  // __patsflab_boards2show
  tmp83 = arg0[0];
  tmp84 = arg0[1];
  tmp85 = ats2jspre_mtrxszref_make_elt(8, 8, "");
  tmp86 = ats2jspre_mtrxszref_make_elt(8, 8, "");
  ats2jspre_mtrxszref_foreach_cloref(tmp83, Battleship__patsfun_15__closurerize(tmp83, tmp85));
  ats2jspre_mtrxszref_foreach_cloref(tmp84, Battleship__patsfun_16__closurerize(tmp84, tmp86));
  tmpret82 = [tmp85, tmp86];
  return tmpret82;
} // end-of-function


function
Battleship__patsfun_15(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmp89
  var tmp90
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_15
  tmp90 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
  tmp89 = defNode2string(tmp90);
  ats2jspre_mtrxszref_set_at(env1, arg0, arg1, tmp89);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_16(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmp93
  var tmp94
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_16
  tmp94 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
  tmp93 = attNode2string(tmp94);
  ats2jspre_mtrxszref_set_at(env1, arg0, arg1, tmp93);
  return/*_void*/;
} // end-of-function


function
printBoards(arg0, arg1)
{
//
// knd = 0
  var tmp102
  var tmp107
  var tmp119
  var tmp125
  var tmp135
  var tmp140
  var tmp152
  var tmp157
  var tmplab, tmplab_js
//
  // __patsflab_printBoards
  ats2jspre_print_string("Player");
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp102 = ats2jspre_int_foreach_method(8);
  tmp102[0](tmp102, Battleship__patsfun_18__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  tmp107 = ats2jspre_int_foreach_method(8);
  tmp107[0](tmp107, Battleship__patsfun_19__closurerize(arg0, "+", 8));
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp119 = ats2jspre_int_foreach_method(8);
  tmp119[0](tmp119, Battleship__patsfun_21__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  tmp125 = ats2jspre_int_foreach_method(8);
  tmp125[0](tmp125, Battleship__patsfun_22__closurerize());
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string("CPU");
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp135 = ats2jspre_int_foreach_method(8);
  tmp135[0](tmp135, Battleship__patsfun_23__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  tmp140 = ats2jspre_int_foreach_method(8);
  tmp140[0](tmp140, Battleship__patsfun_24__closurerize(arg1, "+", 8));
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp152 = ats2jspre_int_foreach_method(8);
  tmp152[0](tmp152, Battleship__patsfun_26__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  tmp157 = ats2jspre_int_foreach_method(8);
  tmp157[0](tmp157, Battleship__patsfun_27__closurerize());
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_18(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_18
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_19(env0, env1, env2, arg0)
{
//
// knd = 0
  var tmp112
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_19
  ats2jspre_print_int(arg0);
  ats2jspre_print_string(env1);
  tmp112 = ats2jspre_int_foreach_method(env2);
  tmp112[0](tmp112, Battleship__patsfun_20__closurerize(env0, arg0));
  ats2jspre_print_string(env1);
  ats2jspre_print_newline();
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_20(env0, env1, arg0)
{
//
// knd = 0
  var tmp114
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_20
  tmp114 = ats2jspre_mtrxszref_get_at(env0, env1, arg0);
  ats2jspre_print_string(tmp114);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_21(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_21
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_22(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_22
  ats2jspre_print_int(arg0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_23(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_23
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_24(env0, env1, env2, arg0)
{
//
// knd = 0
  var tmp145
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_24
  ats2jspre_print_int(arg0);
  ats2jspre_print_string(env1);
  tmp145 = ats2jspre_int_foreach_method(env2);
  tmp145[0](tmp145, Battleship__patsfun_25__closurerize(env0, arg0));
  ats2jspre_print_string(env1);
  ats2jspre_print_newline();
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_25(env0, env1, arg0)
{
//
// knd = 0
  var tmp147
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_25
  tmp147 = ats2jspre_mtrxszref_get_at(env0, env1, arg0);
  ats2jspre_print_string(tmp147);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_26(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_26
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_27(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_27
  ats2jspre_print_int(arg0);
  return/*_void*/;
} // end-of-function


function
printScores(arg0, arg1)
{
//
// knd = 0
  var tmpret159
  var tmp168
  var tmp169
  var tmp171
  var tmp173
  var tmplab, tmplab_js
//
  // __patsflab_printScores
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string("Your score: ");
  ats2jspre_print_int(arg0);
  ats2jspre_print_newline();
  ats2jspre_print_string("CPU score: ");
  ats2jspre_print_int(arg1);
  tmp169 = ats2jspre_eq_int1_int1(arg0, 10);
  if(tmp169) {
    tmp168 = ats2jspre_eq_int1_int1(arg1, 10);
  } else {
    tmp168 = false;
  } // endif
  if(tmp168) {
    ats2jspre_alert("You tied!");
    tmpret159 = 1;
  } else {
    tmp171 = ats2jspre_eq_int1_int1(arg1, 10);
    if(tmp171) {
      ats2jspre_alert("You Lost!");
      tmpret159 = 1;
    } else {
      tmp173 = ats2jspre_eq_int1_int1(arg0, 10);
      if(tmp173) {
        ats2jspre_alert("You won!");
        tmpret159 = 1;
      } else {
        tmpret159 = 0;
      } // endif
    } // endif
  } // endif
  return tmpret159;
} // end-of-function


function
printResults(arg0, arg1, arg2, arg3, arg4, arg5)
{
//
// knd = 0
  var tmp181
  var tmp182
  var tmp189
  var tmp196
  var tmplab, tmplab_js
//
  // __patsflab_printResults
  tmp182 = ats2jspre_eq_int1_int1(arg0, 1);
  if(tmp182) {
    tmp181 = ats2jspre_eq_int1_int1(arg1, 1);
  } else {
    tmp181 = false;
  } // endif
  if(tmp181) {
    ats2jspre_print_string("You hit at ");
    Battleship__printCoord_30(arg2, arg3);
    ats2jspre_print_string(" and he hit at ");
    Battleship__printCoord_30(arg4, arg5);
    ats2jspre_print_string("!");
    ats2jspre_print_newline();
    ats2jspre_print_newline();
  } else {
    tmp189 = ats2jspre_eq_int1_int1(arg0, 1);
    if(tmp189) {
      ats2jspre_print_string("You hit at ");
      Battleship__printCoord_30(arg2, arg3);
      ats2jspre_print_string(" and he missed at ");
      Battleship__printCoord_30(arg4, arg5);
      ats2jspre_print_string("!");
      ats2jspre_print_newline();
      ats2jspre_print_newline();
    } else {
      tmp196 = ats2jspre_eq_int1_int1(arg1, 1);
      if(tmp196) {
        ats2jspre_print_string("You missed at ");
        Battleship__printCoord_30(arg2, arg3);
        ats2jspre_print_string(" and he hit at ");
        Battleship__printCoord_30(arg4, arg5);
        ats2jspre_print_string("!");
        ats2jspre_print_newline();
        ats2jspre_print_newline();
      } else {
        ats2jspre_print_string("You missed at ");
        Battleship__printCoord_30(arg2, arg3);
        ats2jspre_print_string(" and he missed at ");
        Battleship__printCoord_30(arg4, arg5);
        ats2jspre_print_string("!");
        ats2jspre_print_newline();
        ats2jspre_print_newline();
      } // endif
    } // endif
  } // endif
  return/*_void*/;
} // end-of-function


function
Battleship__printCoord_30(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__printCoord_30
  ats2jspre_print_string("(");
  ats2jspre_print_int(arg0);
  ats2jspre_print_string(",");
  ats2jspre_print_int(arg1);
  ats2jspre_print_string(")");
  return/*_void*/;
} // end-of-function


function
checkBefore(arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret209
  var tmp210
  var tmp211
  var tmp212
  var tmp213
  var tmp214
  var tmp215
  var tmp216
  var tmp217
  var tmp218
  var tmp219
  var tmp220
  var tmp221
  var tmp222
  var tmp223
  var tmp224
  var tmp225
  var tmp226
  var tmp227
  var tmp228
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_checkBefore
    tmp210 = arg0[1];
    tmp211 = arg0[2];
    tmp214 = ats2jspre_gte_int0_int0(arg1, 0);
    if(tmp214) {
      tmp213 = ats2jspre_lt_int0_int0(arg1, 8);
    } else {
      tmp213 = false;
    } // endif
    if(tmp213) {
      tmp215 = ats2jspre_gte_int0_int0(arg2, 0);
      if(tmp215) {
        tmp212 = ats2jspre_lt_int0_int0(arg2, 8);
      } else {
        tmp212 = false;
      } // endif
    } else {
      tmp212 = false;
    } // endif
    if(tmp212) {
      tmp216 = ats2jspre_mtrxszref_get_at(tmp210, arg1, arg2);
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab28
          if(ATSCKptriscons(tmp216)) { tmplab_js = 4; break; }
          case 2: // __atstmplab29
          tmpret209 = [arg1, arg2];
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab30
          case 4: // __atstmplab31
          if(tmp211) {
            tmp220 = ats2jspre_JSmath_random();
            tmp219 = ats2jspre_mul_double_double(tmp220, 0.999999);
            tmp218 = ats2jspre_mul_double_int(tmp219, 8);
            tmp217 = ats2jspre_double2int(tmp218);
            tmp224 = ats2jspre_JSmath_random();
            tmp223 = ats2jspre_mul_double_double(tmp224, 0.999999);
            tmp222 = ats2jspre_mul_double_int(tmp223, 8);
            tmp221 = ats2jspre_double2int(tmp222);
            // ATStailcalseq_beg
            apy0 = arg0;
            apy1 = tmp217;
            apy2 = tmp221;
            arg0 = apy0;
            arg1 = apy1;
            arg2 = apy2;
            funlab_js = 1; // __patsflab_checkBefore
            // ATStailcalseq_end
          } else {
            tmp225 = ats2jspre_neg_int1(1);
            tmp226 = ats2jspre_neg_int1(1);
            tmpret209 = [tmp225, tmp226];
          } // endif
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
    } else {
      tmp227 = ats2jspre_neg_int1(2);
      tmp228 = ats2jspre_neg_int1(2);
      tmpret209 = [tmp227, tmp228];
    } // endif
    if (funlab_js > 0) continue; else return tmpret209;
  } // endwhile-fun
} // end-of-function

// dynloadflag_minit
var _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag = 0;

function
_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag(390))
  if(ATSCKiseqz(_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag)) {
    _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag = 1 ; // flag is set
  } // endif
  return/*_void*/;
} // end-of-function


function
Battleship__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ATSextcode_beg() */
//
function
thePrintbd_display()
{
//
var human = player_human_init();
var cpu = player_cpu_init();
//
ownBoard_addShips(human, generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip())
ownBoard_addShips(cpu, generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip())
//
var [s1, s2] = boards2show(human);
//
ats2jspre_the_print_store_clear();
//
printBoards(s1, s2);
//
document.getElementById("theBattleship_printbd").innerHTML = ats2jspre_the_print_store_join();
//
return [human, cpu];
//
} /* end of [thePrintbd_display] */
//
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
function
Battleship_initize()
{
//
var ret = thePrintbd_display();
//
return [ret[0], ret[1]]; // from [Battleship_initize]
//
} // end of [Battleship_initize]
/* ATSextcode_end() */

/* ATSextcode_beg() */
var hits = 0;
var hitsTaken = 0;
var gameOver = 0;
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
jQuery(document).ready(function(){
Battleship__dynload();
var players = Battleship_initize();
document.getElementById("attack_btn").onclick = function () {
    if (gameOver == 0) {
        var x = parseInt(document.getElementById("attackx").value);
        var y = parseInt(document.getElementById("attacky").value);
        var res = attack(players[0], players[1], x, y);

        if (res != 2) {
            var xtry = ats2jspre_double2int(Math.random()*0.999999*8);
            var ytry = ats2jspre_double2int(Math.random()*0.999999*8);
            var [cpux, cpuy] = checkBefore(players[1], xtry, ytry);
            var res2 = attack(players[1], players[0], cpux, cpuy);
            ats2jspre_the_print_store_clear();
            hits = hits + res;
            hitsTaken = hitsTaken + res2;
            printResults(res, res2, x, y, cpux, cpuy);
            var [s1, s2] = boards2show(players[0]);
            printBoards(s1, s2);
            gameOver = printScores(hits, hitsTaken);
            document.getElementById("theBattleship_printbd").innerHTML = ats2jspre_the_print_store_join();
        }
    } else {
        alert("The game is over! Refresh the page to start again!")
    }
};
});
//
/* ATSextcode_end() */

/* ****** ****** */

/* end-of-compilation-unit */
