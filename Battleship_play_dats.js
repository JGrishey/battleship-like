/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2016-12-7: 20h:57m
**
*/

function
Battleship__patsfun_16__closurerize(env0, env1)
{
  return [function(cenv, arg0, arg1) { return Battleship__patsfun_16(cenv[1], cenv[2], arg0, arg1); }, env0, env1];
}


function
Battleship__patsfun_17__closurerize(env0, env1)
{
  return [function(cenv, arg0, arg1) { return Battleship__patsfun_17(cenv[1], cenv[2], arg0, arg1); }, env0, env1];
}


function
Battleship__patsfun_19__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_19(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_20__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0) { return Battleship__patsfun_20(cenv[1], cenv[2], cenv[3], arg0); }, env0, env1, env2];
}


function
Battleship__patsfun_21__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return Battleship__patsfun_21(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
Battleship__patsfun_22__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_22(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_23__closurerize()
{
  return [function(cenv, arg0) { return Battleship__patsfun_23(arg0); }];
}


function
Battleship__patsfun_24__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_24(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_25__closurerize(env0, env1, env2)
{
  return [function(cenv, arg0) { return Battleship__patsfun_25(cenv[1], cenv[2], cenv[3], arg0); }, env0, env1, env2];
}


function
Battleship__patsfun_26__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return Battleship__patsfun_26(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
Battleship__patsfun_27__closurerize(env0)
{
  return [function(cenv, arg0) { return Battleship__patsfun_27(cenv[1], arg0); }, env0];
}


function
Battleship__patsfun_28__closurerize()
{
  return [function(cenv, arg0) { return Battleship__patsfun_28(arg0); }];
}


function
ownBoard_init()
{
//
// knd = 0
  var tmpret0
  var tmp1
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_init
  tmp1 = null;
  tmpret0 = ats2jspre_mtrxszref_make_elt(8, 8, tmp1);
  return tmpret0;
} // end-of-function


function
attackBoard_init()
{
//
// knd = 0
  var tmpret2
  var tmp3
  var tmplab, tmplab_js
//
  // __patsflab_attackBoard_init
  tmp3 = null;
  tmpret2 = ats2jspre_mtrxszref_make_elt(8, 8, tmp3);
  return tmpret2;
} // end-of-function


function
player_human_init()
{
//
// knd = 0
  var tmpret4
  var tmp5
  var tmp6
  var tmplab, tmplab_js
//
  // __patsflab_player_human_init
  tmp5 = ownBoard_init();
  tmp6 = attackBoard_init();
  tmpret4 = [tmp5, tmp6, false, 0, 0];
  return tmpret4;
} // end-of-function


function
player_cpu_init()
{
//
// knd = 0
  var tmpret7
  var tmp8
  var tmp9
  var tmplab, tmplab_js
//
  // __patsflab_player_cpu_init
  tmp8 = ownBoard_init();
  tmp9 = attackBoard_init();
  tmpret7 = [tmp8, tmp9, true, 0, 0];
  return tmpret7;
} // end-of-function


function
ownBoard_get(arg0)
{
//
// knd = 0
  var tmpret10
  var tmp11
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_get
  tmp11 = arg0[0];
  tmpret10 = tmp11;
  return tmpret10;
} // end-of-function


function
attackBoard_get(arg0)
{
//
// knd = 0
  var tmpret12
  var tmp13
  var tmplab, tmplab_js
//
  // __patsflab_attackBoard_get
  tmp13 = arg0[1];
  tmpret12 = tmp13;
  return tmpret12;
} // end-of-function


function
ownBoard_addShips(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
{
//
// knd = 0
  var tmp15
  var tmplab, tmplab_js
//
  // __patsflab_ownBoard_addShips
  tmp15 = ownBoard_get(arg0);
  Battleship__addShip_7(tmp15, arg1);
  Battleship__addShip_7(tmp15, arg2);
  Battleship__addShip_7(tmp15, arg3);
  Battleship__addShip_7(tmp15, arg4);
  Battleship__addShip_7(tmp15, arg5);
  Battleship__addShip_7(tmp15, arg6);
  Battleship__addShip_7(tmp15, arg7);
  Battleship__addShip_7(tmp15, arg8);
  Battleship__addShip_7(tmp15, arg9);
  Battleship__addShip_7(tmp15, arg10);
  return/*_void*/;
} // end-of-function


function
Battleship__addShip_7(env0, arg0)
{
//
// knd = 0
  var tmp17
  var tmp18
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__addShip_7
  tmp17 = arg0[0];
  tmp18 = arg0[1];
  Battleship__aux_8(env0, tmp17, tmp18);
  return/*_void*/;
} // end-of-function


function
Battleship__aux_8(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp20
  var tmp21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var tmp26
  var tmp27
  var tmp28
  var tmp29
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_Battleship__aux_8
    tmp20 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab0
        if(ATSCKptriscons(tmp20)) { tmplab_js = 4; break; }
        case 2: // __atstmplab1
        tmp21 = [1];
        ats2jspre_mtrxszref_set_at(env0, arg0, arg1, tmp21);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab2
        case 4: // __atstmplab3
        tmp25 = ats2jspre_JSmath_random();
        tmp24 = ats2jspre_mul_double_double(tmp25, 0.999999);
        tmp23 = ats2jspre_mul_double_int(tmp24, 8);
        tmp22 = ats2jspre_double2int(tmp23);
        tmp29 = ats2jspre_JSmath_random();
        tmp28 = ats2jspre_mul_double_double(tmp29, 0.999999);
        tmp27 = ats2jspre_mul_double_int(tmp28, 8);
        tmp26 = ats2jspre_double2int(tmp27);
        // ATStailcalseq_beg
        apy0 = tmp22;
        apy1 = tmp26;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_Battleship__aux_8
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
generate_randShip()
{
//
// knd = 0
  var tmpret39
  var tmp40
  var tmp41
  var tmp42
  var tmp43
  var tmp44
  var tmp45
  var tmp46
  var tmp47
  var tmplab, tmplab_js
//
  // __patsflab_generate_randShip
  tmp43 = ats2jspre_JSmath_random();
  tmp42 = ats2jspre_mul_double_double(tmp43, 0.999999);
  tmp41 = ats2jspre_mul_double_int(tmp42, 8);
  tmp40 = ats2jspre_double2int(tmp41);
  tmp47 = ats2jspre_JSmath_random();
  tmp46 = ats2jspre_mul_double_double(tmp47, 0.999999);
  tmp45 = ats2jspre_mul_double_int(tmp46, 8);
  tmp44 = ats2jspre_double2int(tmp45);
  tmpret39 = [tmp40, tmp44];
  return tmpret39;
} // end-of-function


function
genShip(arg0, arg1)
{
//
// knd = 0
  var tmpret48
  var tmplab, tmplab_js
//
  // __patsflab_genShip
  tmpret48 = [arg0, arg1];
  return tmpret48;
} // end-of-function


function
attack(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmpret49
  var tmp50
  var tmp51
  var tmplab, tmplab_js
//
  // __patsflab_attack
  tmp50 = arg0[1];
  tmp51 = arg1[0];
  tmpret49 = bomb_node(tmp51, tmp50, arg2, arg3);
  return tmpret49;
} // end-of-function


function
bomb_node(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmpret52
  var tmp53
  var tmp54
  var tmp56
  var tmp57
  var tmp59
  var tmp61
  var tmplab, tmplab_js
//
  // __patsflab_bomb_node
  tmp53 = ats2jspre_mtrxszref_get_at(arg0, arg2, arg3);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab4
      if(ATSCKptriscons(tmp53)) { tmplab_js = 4; break; }
      case 2: // __atstmplab5
      tmp56 = [1];
      ats2jspre_mtrxszref_set_at(arg1, arg2, arg3, tmp56);
      tmpret52 = 0;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab6
      case 4: // __atstmplab7
      tmp54 = tmp53[0];
      tmp57 = ats2jspre_eq_int0_int0(tmp54, 1);
      if(tmp57) {
        tmp59 = [2];
        ats2jspre_mtrxszref_set_at(arg0, arg2, arg3, tmp59);
        tmp61 = [2];
        ats2jspre_mtrxszref_set_at(arg1, arg2, arg3, tmp61);
        tmpret52 = 1;
      } else {
        tmpret52 = 0;
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret52;
} // end-of-function


function
defNode2string(arg0)
{
//
// knd = 0
  var tmpret62
  var tmp63
  var tmplab, tmplab_js
//
  // __patsflab_defNode2string
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab8
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab9
      tmpret62 = "O";
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab10
      case 4: // __atstmplab11
      tmp63 = arg0[0];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab12
          if(!ATSCKpat_int(tmp63, 1)) { tmplab_js = 3; break; }
          case 2: // __atstmplab13
          tmpret62 = "S";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab14
          if(!ATSCKpat_int(tmp63, 2)) { tmplab_js = 5; break; }
          case 4: // __atstmplab15
          tmpret62 = "D";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 5: // __atstmplab16
          tmpret62 = ats2jspre_String(tmp63);
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret62;
} // end-of-function


function
attNode2string(arg0)
{
//
// knd = 0
  var tmpret64
  var tmp65
  var tmplab, tmplab_js
//
  // __patsflab_attNode2string
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab17
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab18
      tmpret64 = "?";
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab19
      case 4: // __atstmplab20
      tmp65 = arg0[0];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab21
          if(!ATSCKpat_int(tmp65, 1)) { tmplab_js = 3; break; }
          case 2: // __atstmplab22
          tmpret64 = "X";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab23
          if(!ATSCKpat_int(tmp65, 2)) { tmplab_js = 5; break; }
          case 4: // __atstmplab24
          tmpret64 = "D";
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 5: // __atstmplab25
          tmpret64 = ats2jspre_String(tmp65);
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret64;
} // end-of-function


function
boards2show(arg0)
{
//
// knd = 0
  var tmpret66
  var tmp67
  var tmp68
  var tmp69
  var tmp70
  var tmplab, tmplab_js
//
  // __patsflab_boards2show
  tmp67 = arg0[0];
  tmp68 = arg0[1];
  tmp69 = ats2jspre_mtrxszref_make_elt(8, 8, "");
  tmp70 = ats2jspre_mtrxszref_make_elt(8, 8, "");
  ats2jspre_mtrxszref_foreach_cloref(tmp67, Battleship__patsfun_16__closurerize(tmp67, tmp69));
  ats2jspre_mtrxszref_foreach_cloref(tmp68, Battleship__patsfun_17__closurerize(tmp68, tmp70));
  tmpret66 = [tmp69, tmp70];
  return tmpret66;
} // end-of-function


function
Battleship__patsfun_16(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmp73
  var tmp74
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_16
  tmp74 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
  tmp73 = defNode2string(tmp74);
  ats2jspre_mtrxszref_set_at(env1, arg0, arg1, tmp73);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_17(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmp77
  var tmp78
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_17
  tmp78 = ats2jspre_mtrxszref_get_at(env0, arg0, arg1);
  tmp77 = attNode2string(tmp78);
  ats2jspre_mtrxszref_set_at(env1, arg0, arg1, tmp77);
  return/*_void*/;
} // end-of-function


function
printBoards(arg0, arg1)
{
//
// knd = 0
  var tmp86
  var tmp91
  var tmp103
  var tmp109
  var tmp119
  var tmp124
  var tmp136
  var tmp141
  var tmplab, tmplab_js
//
  // __patsflab_printBoards
  ats2jspre_print_string("Player");
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp86 = ats2jspre_int_foreach_method(8);
  tmp86[0](tmp86, Battleship__patsfun_19__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  tmp91 = ats2jspre_int_foreach_method(8);
  tmp91[0](tmp91, Battleship__patsfun_20__closurerize(arg0, "+", 8));
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp103 = ats2jspre_int_foreach_method(8);
  tmp103[0](tmp103, Battleship__patsfun_22__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  tmp109 = ats2jspre_int_foreach_method(8);
  tmp109[0](tmp109, Battleship__patsfun_23__closurerize());
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string("CPU");
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp119 = ats2jspre_int_foreach_method(8);
  tmp119[0](tmp119, Battleship__patsfun_24__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  tmp124 = ats2jspre_int_foreach_method(8);
  tmp124[0](tmp124, Battleship__patsfun_25__closurerize(arg1, "+", 8));
  ats2jspre_print_string(" ");
  ats2jspre_print_string("+");
  tmp136 = ats2jspre_int_foreach_method(8);
  tmp136[0](tmp136, Battleship__patsfun_27__closurerize("+"));
  ats2jspre_print_string("+");
  ats2jspre_print_newline();
  ats2jspre_print_string(" ");
  tmp141 = ats2jspre_int_foreach_method(8);
  tmp141[0](tmp141, Battleship__patsfun_28__closurerize());
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_19(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_19
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_20(env0, env1, env2, arg0)
{
//
// knd = 0
  var tmp96
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_20
  ats2jspre_print_int(arg0);
  ats2jspre_print_string(env1);
  tmp96 = ats2jspre_int_foreach_method(env2);
  tmp96[0](tmp96, Battleship__patsfun_21__closurerize(env0, arg0));
  ats2jspre_print_string(env1);
  ats2jspre_print_newline();
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_21(env0, env1, arg0)
{
//
// knd = 0
  var tmp98
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_21
  tmp98 = ats2jspre_mtrxszref_get_at(env0, env1, arg0);
  ats2jspre_print_string(tmp98);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_22(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_22
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_23(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_23
  ats2jspre_print_int(arg0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_24(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_24
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_25(env0, env1, env2, arg0)
{
//
// knd = 0
  var tmp129
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_25
  ats2jspre_print_int(arg0);
  ats2jspre_print_string(env1);
  tmp129 = ats2jspre_int_foreach_method(env2);
  tmp129[0](tmp129, Battleship__patsfun_26__closurerize(env0, arg0));
  ats2jspre_print_string(env1);
  ats2jspre_print_newline();
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_26(env0, env1, arg0)
{
//
// knd = 0
  var tmp131
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_26
  tmp131 = ats2jspre_mtrxszref_get_at(env0, env1, arg0);
  ats2jspre_print_string(tmp131);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_27(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_27
  ats2jspre_print_string(env0);
  return/*_void*/;
} // end-of-function


function
Battleship__patsfun_28(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_Battleship__patsfun_28
  ats2jspre_print_int(arg0);
  return/*_void*/;
} // end-of-function


function
printScores(arg0, arg1)
{
//
// knd = 0
  var tmp152
  var tmp153
  var tmplab, tmplab_js
//
  // __patsflab_printScores
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_newline();
  ats2jspre_print_string("Your score: ");
  ats2jspre_print_int(arg0);
  ats2jspre_print_newline();
  ats2jspre_print_string("CPU score: ");
  ats2jspre_print_int(arg1);
  tmp152 = ats2jspre_eq_int0_int0(arg0, 10);
  if(tmp152) {
    ats2jspre_alert("You won!");
  } else {
    tmp153 = ats2jspre_eq_int0_int0(arg1, 10);
    if(tmp153) {
      ats2jspre_alert("You Lost!");
    } else {
      // ATSINSmove_void
    } // endif
  } // endif
  return/*_void*/;
} // end-of-function


function
gameEnd_check(arg0)
{
//
// knd = 0
  var tmpret154
  var tmp155
  var tmp156
  var tmp157
  var tmp158
  var tmp159
  var tmp160
  var tmp161
  var tmplab, tmplab_js
//
  // __patsflab_gameEnd_check
  tmp155 = arg0[2];
  tmp156 = arg0[3];
  tmp157 = arg0[4];
  tmp158 = ats2jspre_gte_int0_int0(tmp156, 10);
  if(tmp158) {
    tmp159 = ats2jspre_eq_bool0_bool0(tmp155, false);
    if(tmp159) {
      tmpret154 = 1;
    } else {
      tmpret154 = 2;
    } // endif
  } else {
    tmp160 = ats2jspre_gte_int0_int0(tmp157, 10);
    if(tmp160) {
      tmp161 = ats2jspre_eq_bool0_bool0(tmp155, false);
      if(tmp161) {
        tmpret154 = 2;
      } else {
        tmpret154 = 1;
      } // endif
    } else {
      tmpret154 = 0;
    } // endif
  } // endif
  return tmpret154;
} // end-of-function

// dynloadflag_minit
var _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag = 0;

function
_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // ATSdynload()
  // ATSdynloadflag_sta(_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag(311))
  if(ATSCKiseqz(_057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag)) {
    _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynloadflag = 1 ; // flag is set
  } // endif
  return/*_void*/;
} // end-of-function


function
Battleship__dynload()
{
//
// knd = 0
  var tmplab, tmplab_js
//
  _057_Users_057_jgrishey_057_Workspace_057_cs520_055_2016_055_fall_055_jgrishey_057_Project_057_Battleship_play_056_dats__dynload();
  return/*_void*/;
} // end-of-function


/* ATSextcode_beg() */
//
function
thePrintbd_display()
{
//
var human = player_human_init();
var cpu = player_cpu_init();
//
ownBoard_addShips(human, generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip())
ownBoard_addShips(cpu, generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip(), generate_randShip())
//
var [s1, s2] = boards2show(human);
//
ats2jspre_the_print_store_clear();
//
printBoards(s1, s2);
//
document.getElementById("theBattleship_printbd").innerHTML = ats2jspre_the_print_store_join();
//
return [human, cpu];
//
} /* end of [thePrintbd_display] */
//
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
function
Battleship_initize()
{
//
var ret = thePrintbd_display();
//
return [ret[0], ret[1]]; // from [Battleship_initize]
//
} // end of [Battleship_initize]
/* ATSextcode_end() */

/* ATSextcode_beg() */
var hits = 0;
var hitsTaken = 0;
/* ATSextcode_end() */

/* ATSextcode_beg() */
//
jQuery(document).ready(function(){
Battleship__dynload();
var players = Battleship_initize();
document.getElementById("attack_btn").onclick = function () {
    var x = parseInt(document.getElementById("attackx").value);
    var y = parseInt(document.getElementById("attacky").value);
    var res = attack(players[0], players[1], x, y);
    if (res == 1) {
        hits = hits + 1;
        alert("Success! You sunk one of his ships!");
    } else {
        alert("You missed!");
    }
    var res2 = attack(players[1], players[0], ats2jspre_double2int((Math.random()*0.999999*8)), ats2jspre_double2int(Math.random()*0.999999*8));
    if (res2 == 1) {
        hitsTaken = hitsTaken + 1;
        alert("He sunk one of your ships!");
    } else {
        alert("He missed!");
    }

    if (hits == 10) {
        alert("You won!");
    }
    if (hitsTaken == 10) {
        alert("You lost!");
    }

    ats2jspre_the_print_store_clear();
    var [s1, s2] = boards2show(players[0]);
    printBoards(s1, s2);
    printScores(hits, hitsTaken);
    document.getElementById("theBattleship_printbd").innerHTML = ats2jspre_the_print_store_join();
};
});
//
/* ATSextcode_end() */

/* ****** ****** */

/* end-of-compilation-unit */
